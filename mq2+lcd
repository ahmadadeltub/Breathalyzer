#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <math.h>

// Initialize the LCD with I2C address 0x27 and 16 columns and 2 rows
LiquidCrystal_I2C lcd(0x27, 16, 2);

// Define the analog pin for MQ2 sensor
const int MQ2_PIN = A0;

// Calibration parameters (adjust based on your environment and sensor)
const float RL = 10.0; // Load resistance in kilo-ohms
const float RO = 10.0; // Sensor resistance in clean air
const float ALCOHOL_SCALING_FACTOR = 1.0; // Adjust this based on calibration

void setup() {
  // Initialize the serial communication
  Serial.begin(9600);

  // Initialize the LCD
  lcd.init(); // Use init() instead of begin()
  lcd.backlight();
  lcd.setCursor(0, 0);
  lcd.print("MQ2 Sensor");
  lcd.setCursor(0, 1);
  lcd.print("Initializing...");
  delay(2000); // Wait for 2 seconds
  
  // Clear the LCD
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Alcohol Level:");
}

void loop() {
  // Read the analog value from MQ2 sensor
  int sensorValue = analogRead(MQ2_PIN);
  
  // Calculate the sensor resistance
  float RS = ((1023.0 / sensorValue) - 1) * RL;

  // Calculate the ratio of RS to RO
  float ratio = RS / RO;
  
  // Calculate alcohol concentration in ppm (approximation)
  float alcohol_ppm = pow((ratio / RO), -1.44) * ALCOHOL_SCALING_FACTOR;
  
  // Print the alcohol concentration to the serial monitor
  Serial.print("Alcohol concentration: ");
  Serial.print(alcohol_ppm);
  Serial.println(" ppm");
  
  // Print the alcohol concentration to the LCD
  lcd.setCursor(0, 1);
  lcd.print("                "); // Clear previous value
  lcd.setCursor(0, 1);
  lcd.print(alcohol_ppm);
  lcd.print(" ppm");
  
  // Wait for 1 second before next reading
  delay(1000);
}
